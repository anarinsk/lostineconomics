<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on lost in economics</title>
    <link>/</link>
    <description>Recent content in Home on lost in economics</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clustering Top Economists</title>
      <link>/post/2017/12/17/clustering-top-economists/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/12/17/clustering-top-economists/</guid>
      <description>tl; drIGM 패널 소속의 미국 경제학자들이 지닌 경제관을 긁어보니, 이들은 거의 모든 사안에 대해서 꽤 일치된 견해를 갖고 있더라. (물론, 이에 관한 해석은 각자의 마음 속에…)분석에 활용된 과정과 분석 결과는 다음의 각각 링크에서 Download! 아니면 여기서 github
Scraping webMunging dataAnalyzing datasource data by csvMotivation집에 심심하게 있다가 ‘갑자기’(out of nowhere!) 이런 생각이 떠올랐다. ‘믿을만한’(이라고 쓰고 ’저명한’이라고 읽자) 경제학자들은 얼마나 의견에 합의를 볼 수 있을까?</description>
    </item>
    
    <item>
      <title>Google Play Store vs Apple Appstore, part 1</title>
      <link>/post/2017/12/13/google-play-store-vs-apple-appstore-part-1/</link>
      <pubDate>Wed, 13 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/12/13/google-play-store-vs-apple-appstore-part-1/</guid>
      <description>Disclaimer“part 1”이라고 거창하게 달아 놓았지만, 파트2가 나올까? I don’t think so…
Google Play Store(GPS) vs Apple Apptore(AA)한국은 스마트폰 보급율의 차이 만큼이나 모바일 앱 시장의 마켓 비중 역시 안드로이드로 쏠려 있다. 정확한 통계는 찾을 수 없었지만 대체적인 그림은 그릴 수 있겠다. iOS의 경우 2016년에 20% 언저리로 점유율이 상승했으나, 2017년 현재 다시 10~15% 사이로 내려온 것으로 추정된다. 앱 시장의 크기는 어떨까? 선진국 시장의 경우 iOS 이용자들의 높은 구매력 때문에 앱 시장의 크기는 OS 점유율 만큼 차이가 나지 않는 것이 보통이다.</description>
    </item>
    
    <item>
      <title>let in wrapr</title>
      <link>/note/2017/11/28/let-in-wrapr/</link>
      <pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/11/28/let-in-wrapr/</guid>
      <description>Non Standard EvaluationR에는 Non Standard Evaluation(NSE)라고 불리는 녀석이 있다. 어떤 선배님은 변수를 선언하지 않는 R이 처음부터 무척 마음에 들지 않았다, 라고 툴툴대셨다. 하지만 역시 대충 사는 나에게는 ‘까이꺼 대충’ 알아서 해주는 건 편한 장점이다. 좌간, NSE 역시 이와 비슷한 차원에서 이해하면 될 것 같다.
library(tidyverse)library(&amp;#39;tidyverse&amp;#39;)위의 코드에서 둘 중 어떤 문법이 맞을까? 사실 둘 다 써도 된다. library라는 함수는 string과 expression 모두를 input으로 받는다. 전자가 원래 R이 정한 규칙이라면 후자는 이런 표준에서 벗어났지만 실행되는 규칙, Non Standard Evaluation(NSE)이다.</description>
    </item>
    
    <item>
      <title>Relativity matters</title>
      <link>/note/2017/11/24/relativity-matters/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/11/24/relativity-matters/</guid>
      <description>Font sizing그림에 폰트를 심을 때 당황했던 경우가 몇 번 있어서 틈난 김에 몇 자 적겠다. 어차피 이 공간에서는 좀스럽고 잡스런 내용을 주로 다룰 예정이니 관심 없는 분들을 패스하시라. 어차피 JPG, PNG와 같은 비트맵 이미지를 쓰지 않으면서 일정한 호환성을 얻고 싶다면 이미지도 PDF를 쓰면 좋다. 벡터 처리 덕분에 확대와 축소가 자유롭게 때문이다. 아울러 \(\rm \LaTeX\)을 쓰시는 분들이라면 pdflatex로 컴파일 할 때 그림을 쉽게 넣을 수 있다. 이 이야기는 여기서 끊도록 하자.</description>
    </item>
    
    <item>
      <title>Bizarro Magrittr</title>
      <link>/note/2017/11/21/bizarro-magrittr/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/11/21/bizarro-magrittr/</guid>
      <description>pre.bluebox {background-color: #aabbff !important;}pre.redbox {background-color: #ffbbbb !important;}Bizarro!이전 포스팅에서 Magrittr 패키지 이름이 재미있다고 말했지만, 이번 패키지 이름도 못지 않게 재미있다. 수학과 코딩의 경계에서 R의 한계를 시험하는 집단인 Win-Vector에서 만든 패키지인 “Bizarro Magrittr” 혹은 “Bizarro pipe”가 오늘의 주인공이다. DC 만화를 즐겨 보시는 분들은 이미 눈치를 챘으리라. Bizarro는 수퍼맨의 모든 능력을 살짝 다르게 갖고 있는 빌런이다. 흑화한 수퍼맨으로 이해하면 빠르겠다. Bizarro Magrittr(이하 Bizarro) 역시 Magrittr의 거의 모든 능력을 지니고 있지만 ‘흑화’ 변종이다.</description>
    </item>
    
    <item>
      <title>Use your font</title>
      <link>/note/2017/11/16/use-your-font/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/11/16/use-your-font/</guid>
      <description>pre.bluebox {background-color: #aabbff !important;}pre.redbox {background-color: #ffbbbb !important;}Non-alphabetical폰트 문제는 쉬운 듯 어려운 문제다. 그냥 OS에서 폰트 깔아서 쓰듯 쓸 수 있으면 좋으련만 ‘그렇게’ 쉽게 쓸 수는 없다. R에서 그래프를 그려본 사람이라면, 어 “왜 (그래프에서) 폰트가 네모박스로 나와”하는 상황을 한번은 마주쳐 봤을 것이다. 이는 R과 RStudio가 OS에서 끌어다 쓰는 부분이 제한적이기 때문에 생기는 일이다. 그렇다고 못생긴 굴림체와 계속 살 수는 없는 노릇이니 방법을 찾긴 해야 한다.</description>
    </item>
    
    <item>
      <title>Magrittr - Ceci n&#39;est pas un pipe.</title>
      <link>/note/2017/11/15/magrittr---ceci-nest-pas-un-pipe./</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/11/15/magrittr---ceci-nest-pas-un-pipe./</guid>
      <description>pre.bluebox {background-color: #aabbff !important;}pre.redbox {background-color: #ffbbbb !important;}Magritt?\(~~\) magrittr, R 패키지 중에서 아마도 가장 재미있는 이름이 아닐까? 왜 마그리뜨일까? magrittr 패키지는 명령어 처리를 쭉 이어줄 수 있게 해준다. 즉, 파이프라인(pipeline)을 만들어주는 것이다. 이걸 파이프 담배와 연결시켜 “이것은 파이프가 아니다”라는 마그리뜨의 그림까지 연결된다. 우리가 만드는 것은 파이프라인이니 magrittr은 정말로 파이프는 아니다!
이렇게 쭉 연결하는 것이 왜 좋을까? 글은 만연체가 좋지 않지만, 코딩에서 이렇게 파이프라인을 만드는 습관은 (황당할 정도로 길지 않은 이상) 일관된 형태의 작업을 가능하게 해준다.</description>
    </item>
    
    <item>
      <title>sf package with ggplot2</title>
      <link>/post/2017/11/03/sf-package-with-ggplot2/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/11/03/sf-package-with-ggplot2/</guid>
      <description>Motivation일반인이 지도로 할 수 있는 가장 쉬운 시각화는? 누구나 한번은 봤음직 한 단계구분도(cholopleth map)다. 이 작업을 직접 하기 위해 필요한 요소들부터 따져보자.
지도를 그리기 위한 공간 데이터단계로 표현될 변수 (투표율, 소득 등등)1,2를 연결할 방법1,2를 지도로 구현할 방법상당히 직관적인 까닭에 단계구분도는 많이 활용된다. 하지막 막상 단계구분도를 생성하고자 할 때 작업이 그리 간단하지 않다. R로 이 작업을 어떻게 수행할 수 있을까? 단계구분도를 생성하는 것 자체가 그리 난이도가 높은 작업은 아니다.</description>
    </item>
    
    <item>
      <title>Adding bigfoot.js to Hugo</title>
      <link>/note/2017/11/01/adding-bigfoot.js-to-hugo/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/11/01/adding-bigfoot.js-to-hugo/</guid>
      <description>BIGFOOT!웹서핑을 하다가 이 녀석을 보고야 말았다, bigfoot.js. 웹 문서가 고도화된 지금 인터넷으로 노출하는 문서에서 표현의 방법으로 답답함을 느끼는 일은 거의 없을 터다. 표, 수식, 그림 등을 동원해 소통할 때 pdf 등의 프린트 기반 문서들과 비교해 보다 기발하고 뛰어난 사례들도 많다. 당장 이 문서가 작성되고 있는 markdown이 그 대표 사례다.
어쨌든 왠만한 것들이 쉽게 된다는 걸 알게 되면, 작은 차이들이 눈에 들어오기 마련이다. 각주 처리만 좀 더 ‘멋지게’ 되면 좋겠는데, 싶었다.</description>
    </item>
    
    <item>
      <title>Regression Modelling with Tidyverse</title>
      <link>/post/2017/10/30/regression-modelling-with-tidyverse/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/10/30/regression-modelling-with-tidyverse/</guid>
      <description>tidyverse로 묶인 패키지 군에 대한 찬미는 뭐 이제… 이번 포스팅에서는 modelr, broom, purrr을 통해서 ‘유연하게’(MB말투로는 “스마아~트하게”) 회귀분석하는 방법을 간략하게 끄적이겠다.
Unconventional data.framedata.frame에는 데이터만 들어갈 수 있을까? 아니다! data.frame을 엑셀 시트처럼만 생각하면 data.frame에게 송구할 일이다. data.frame 안에는 마트로쉬카 인형처럼 또다른 data.frame을 넣을 수 있다. H. Wickham은 이를 “nested data.frame”이라고 부른다.
data.frame 뿐일까! 사실 R의 다른 객체들도 셀 안에 넣을 수 있다. 이 장점을 살리면, 필요한 데이터에 대한 필요한 모델을 유연하게 생성할 수 있다.</description>
    </item>
    
    <item>
      <title>My Stupid Git Experience, part 1</title>
      <link>/note/2017/10/20/my-stupid-git-experience-part-1/</link>
      <pubDate>Fri, 20 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/10/20/my-stupid-git-experience-part-1/</guid>
      <description>Disclaimer이 문서는 git을 다루면서 저질렀던 개인적을 실수를 모아 놓은 것이다. 아마도 문서 자체가 조금씩 진화할 것이므로 어떤 시점에서 보신다면 몹시 허접할 수 있도 있겠다. git에 대해서 잘 아는 분들은 패스하시라. 일단, branch를 심각하게 쓰지 않는다면 여기 나온 정도로 충분할 것 같다.
Basic structureworking dir: local의 작업디렉토리index: staging area. 커밋될 파일들을 올려 두는 공간HEAD: 마지막으로 커밋이 이루어진 branchBasic commandInitiation in local로컬머신에서 git을 개시하는 방법부터 알아보자.</description>
    </item>
    
    <item>
      <title>All dots are not created same...</title>
      <link>/note/2017/10/18/all-dots-are-not-created-same.../</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/10/18/all-dots-are-not-created-same.../</guid>
      <description>\cdots, \ldots, and so on\(\mathrm \LaTeX\)으로 조판하는 분들에게는 때때로 아리송한 사항들이 몇 개 있다. 작정하고 알아보기에는 사소하고 그렇다고 넘어가기엔 찜찜한, 뭐 그런 것들이다. 요즘은 무늬나마 공부하는 사람일 때 만큼 \(\mathrm \LaTeX\)을 쓰지 않는다. 그래도 가끔 쓰기는 해서일까? 이런 사소한 내용에 더 큰 궁금증을 느낄 때가 많다.
문득, \cdots(\(\cdots\))과 \ldots(\(\ldots\))은 어떻게 다르지, 라는 질문이 떠올랐다. 분명, 수학 기호의 일부이기 때문에 다르기는 다를텐데 말이다. 천조국수학회(AMS)에서 관리하는 수학 조판 패키지인 amsmath 패키지의 이용자 매뉴얼에 따르면 ’점 세개’로 표기되는 기호들은 명령어 차원에서 구분된다.</description>
    </item>
    
    <item>
      <title>Proof for &#39;Blotto-Gradiator&#39; game</title>
      <link>/post/2017/10/18/proof-for-blotto-gradiator-game/</link>
      <pubDate>Wed, 18 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/10/18/proof-for-blotto-gradiator-game/</guid>
      <description>Blotto ‘Gradiator’ Game하임 샤피라가 쓴 재미 중심의 게임이론 책 “n분의 1의 함정”을 읽고 있다. 책에서 흥미롭게 변경된 Blotto game을 접했다. 일단, Blotto game에 대해서는 wiki링크를 참고하시고. 샤피라가 제시한 Blotto game을 살짝 변경한 “글레디에이터” 게임은 아래와 같다.
플레이어는 두 검투사 팀이다. 양 팀에 속한 선수가 하나씩 일대일로 싸우고 각자의 전투력에 비례해서 승패가 결정된다. 이긴 쪽은 진 쪽의 전투력을 흡수해 다시 소속 팀으로 복귀하고, 진 쪽은 그대로 사라진다. 일대일 승부가 이어지고, 먼저 검투사를 소진하는 쪽이 패배한다.</description>
    </item>
    
    <item>
      <title>Event Horizon</title>
      <link>/post/2017/10/06/event-horizon/</link>
      <pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/10/06/event-horizon/</guid>
      <description>가끔은 잘 될 때도 있다감독의 역량은 영화의 품질을 정하는 궁극의 성분이다. 영화에 따라 배우의 연기를 건지거나, 음악을 건지거나, 어떤 순간을 건지거나, 미술 등등을 건질 수 있겠다. 하지만 영화의 ’좋고 나쁨’을 정해야 하는 이항선택의 고독한 순간이란게 있다면, 결국 연출이 좌우한다. 물론 운이 끼어들지 않은 재능이란 없을 터. 뛰어난 감독이라고 걸작만 양산하지 못하고, 못난 감독이라고 졸작만 배출하는 것은 아니다. 그러니 이 인생 한번 살아볼만한 걸까? (ㅎ 그래도 나는 안될꺼야~)
Paul Anderson이 사람을 혼동하지 마시라.</description>
    </item>
    
    <item>
      <title>How to manage your personal project</title>
      <link>/post/2017/10/02/how-to-manage-your-personal-project/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/10/02/how-to-manage-your-personal-project/</guid>
      <description>Prologue코딩을 잘하는 것도 아니고 많이 하는 것도 아니고 그래서 많이 아는 것도 아니다. 하지만, 그 별 것 아닌 일도 하게 될 때 가장 고민스러운 대목은 다음의 두가지다.
문제해결작업의 연속성아주 거대하고 어려운 문제가 아니라면 첫번째는 시간을 부으면 어떻게든 해결은 된다. 물론, 내 경우 능력이 부족해서 언제나 우아하게 해결되지 않은 경우가 많기는 하지만… 해결 이후 많이 하게 되는 고민은 일정 시간이 지니고 잊게 된다는 슬픈 사실이다. 해결의 열기와 집중은 시간이 지나면 가시기 마련이다.</description>
    </item>
    
    <item>
      <title>안녕 R Markdown</title>
      <link>/post/2017/09/18/%EC%95%88%EB%85%95-r-markdown/</link>
      <pubDate>Mon, 18 Sep 2017 21:13:14 -0500</pubDate>
      
      <guid>/post/2017/09/18/%EC%95%88%EB%85%95-r-markdown/</guid>
      <description>원래 문서는 Frida Gomam이 작성한, Hello R Markdown이다. 여기서는 내 입맛에 맞게 문서를 고쳤으므로 저자를 바꾸었다.
R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.</description>
    </item>
    
    <item>
      <title>Blog by Hogo</title>
      <link>/post/2017/09/19/blog-by-hogo/</link>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/2017/09/19/blog-by-hogo/</guid>
      <description>Prologue어쨌든 자신만의 공간을 지니는 것은 로망이다. 이 로망을 웹에서 실현해본 사람들은 넷스케이프를 써보고, 웹에디터(나모 웹에디터?)를 통해 자신만의 홈페이지를 만들어본 경험이 있는 세대에 속할 것이다. 내용에 집중해야 한다는 것은 맞다. 네이버, 다음, 구글 등은 편리하게 글을 올리고 입소문을 태울 수 있고 관리가 편한 블로그의 틀을 이미 제공한다. 그렇다면, 왜 독자적인 공간을 만들어야 하는가?
대기업이 싫어서서비스 주소가 마음에 안들어서디자인이나 형식이 과해서뭐 이유야 여러가지가 있겠지만 직접 만드는 것에는 나름의 의의는 있겠다.</description>
    </item>
    
    <item>
      <title>Data Talk</title>
      <link>/note/2017/09/19/data-talk/</link>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/09/19/data-talk/</guid>
      <description>Prologue개인적이든 직업적인 이유든 데이터를 볼 일이 많습니다. 인상적으로 본 데이터를 소개하는 꼭지를 한번 만들어 봅니다. 제가 여기저기서 본 것들을 가져옵니다. 독창성 같은 건 기대하지 마시기를… 아울러 업데이트도 기분 내킬 때!
Alchol vs Suicide인과관계는 아니니까, 그렇구나 하고 말지요.
How death has changed over 100 years in Britain엄청난 비주얼라이제이션입니다. 일종의 동영상이라고 할 수 있을텐데, 공중보건의 주요한 사건과 죽음의 양상을 잘 이야기해주고 있습니다.
Guardian
2,000 Years of Economic History in One Chart혹자의 이야기처럼, 중국은 “열강”이 아닌 적이 별로 없었던 나라입니다.</description>
    </item>
    
    <item>
      <title>Another Note on A blogdown Tutorial</title>
      <link>/note/2017/06/14/another-note/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/06/14/another-note/</guid>
      <description>I just discovered an awesome tutorial on blogdown written by Alison. I have to admit this is the best blogdown tutorial I have seen so far.</description>
    </item>
    
    <item>
      <title>A Quick Note on Two Beautiful Websites</title>
      <link>/note/2017/06/13/a-quick-note/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/note/2017/06/13/a-quick-note/</guid>
      <description>To me, the two most impressive websites based on blogdown are:
 Rob J Hyndman&amp;rsquo;s personal website. Live Free or Dichotomize by Lucy and Nick et al.  I&amp;rsquo;m sure there will be more.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>/post/2016/02/14/a-plain-markdown-post/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/2016/02/14/a-plain-markdown-post/</guid>
      <description>This sample post is mainly for blogdown users. If you do not use blogdown, you can skip the first section.
1. Markdown or R Markdown This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
 You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>/post/2015/07/23/lorem-ipsum/</link>
      <pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>/post/2015/07/23/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
Quisque mattis volutpat lorem vitae feugiat.</description>
    </item>
    
    <item>
      <title>About Hugo XMin</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>XMin is the first Hugo theme I have designed. The original reason that I wrote it was I needed a minimal example of Hugo themes when I was writing the blogdown book. Basically I wanted a simple theme that supports a navigation menu, a home page, other single pages, lists of pages, blog posts, categories, tags, and RSS. That is all. Nothing fancy. In terms of CSS and JavaScript, I really want to keep them minimal.</description>
    </item>
    
  </channel>
</rss>